import { __assign } from '../../_virtual/_tslib.js';
import React from 'react';
import { Table } from '../Table/Table.js';
import { useDayPicker } from '../../contexts/DayPicker/useDayPicker.js';
import '../../contexts/DayPicker/DayPickerContext.js';
import '../../contexts/Navigation/NavigationContext.js';
import { useNavigation } from '../../contexts/Navigation/useNavigation.js';

/**
 * Render the container with the months and their captions. The number of months
 * rendered depends by the `numberOfMonths` prop.
 */
function Root() {
    var _a = useDayPicker(), dir = _a.dir, className = _a.className, classNames = _a.classNames, style = _a.style, styles = _a.styles, numberOfMonths = _a.numberOfMonths, showWeekNumber = _a.showWeekNumber, Caption = _a.components.Caption;
    var displayMonths = useNavigation().displayMonths;
    var rootClassNames = [className !== null && className !== void 0 ? className : classNames.root];
    if (numberOfMonths > 1) {
        rootClassNames.push(classNames.multiple_month);
    }
    if (showWeekNumber) {
        rootClassNames.push(classNames.with_weeknumber);
    }
    if (className)
        rootClassNames.concat(className.split(' '));
    var renderMonth = function (displayMonth, displayIndex) {
        var _a;
        var className = [classNames.month];
        var style = __assign({}, styles.month);
        var isFirst = displayIndex === 0;
        var isLast = displayIndex === displayMonths.length - 1;
        if (dir === 'rtl')
            _a = [isFirst, isLast], isLast = _a[0], isFirst = _a[1];
        if (isFirst) {
            className.push(classNames.caption_first);
            Object.assign(style, styles.caption_first);
        }
        if (isLast)
            className.push(classNames.caption_last);
        if (!isFirst && !isLast)
            className.push(classNames.caption_middle);
        return (React.createElement("div", { key: displayIndex, className: className.join(' '), style: style },
            React.createElement(Caption, { displayMonth: displayMonth }),
            React.createElement(Table, { displayMonth: displayMonth })));
    };
    return (React.createElement("div", { className: rootClassNames.join(' '), style: __assign(__assign({}, styles.root), style), dir: dir },
        React.createElement("div", { className: classNames.months, style: styles.months }, displayMonths.map(renderMonth))));
}

export { Root };
//# sourceMappingURL=Root.js.map
