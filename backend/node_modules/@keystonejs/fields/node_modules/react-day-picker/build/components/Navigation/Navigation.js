import React from 'react';
import { useDayPicker } from '../../contexts/DayPicker/useDayPicker.js';
import '../../contexts/DayPicker/DayPickerContext.js';
import { Button } from '../Button/Button.js';

/** A component rendering the navigation buttons or the drop-downs. */
function Navigation(props) {
    var _a;
    var _b = useDayPicker(), dir = _b.dir, locale = _b.locale, classNames = _b.classNames, styles = _b.styles, _c = _b.labels, labelPrevious = _c.labelPrevious, labelNext = _c.labelNext, _d = _b.components, IconRight = _d.IconRight, IconLeft = _d.IconLeft;
    var onPreviousClick = props.onPreviousClick, onNextClick = props.onNextClick;
    if (dir === 'rtl') {
        _a = [onPreviousClick, onNextClick], onNextClick = _a[0], onPreviousClick = _a[1];
    }
    var previousMonth = props.previousMonth, nextMonth = props.nextMonth;
    var previousLabel = labelPrevious(previousMonth, { locale: locale });
    var previousClassName = [
        classNames.nav_button,
        classNames.nav_button_previous
    ].join(' ');
    var nextLabel = labelNext(nextMonth, { locale: locale });
    var nextClassName = [
        classNames.nav_button,
        classNames.nav_button_next
    ].join(' ');
    if (!nextMonth && !previousMonth) {
        return React.createElement(React.Fragment, null);
    }
    return (React.createElement("div", { className: classNames.nav, style: styles.nav },
        !props.hidePrevious && (React.createElement(Button, { "aria-label": previousLabel, className: previousClassName, style: styles.nav_button_next, disabled: !previousMonth, onClick: dir === 'rtl' ? onNextClick : onPreviousClick }, dir === 'rtl' ? (React.createElement(IconRight, { className: classNames.nav_icon, style: styles.nav_icon })) : (React.createElement(IconLeft, { className: classNames.nav_icon, style: styles.nav_icon })))),
        !props.hideNext && (React.createElement(Button, { "aria-label": nextLabel, className: nextClassName, style: styles.nav_button_next, disabled: !nextMonth, onClick: dir === 'rtl' ? onPreviousClick : onNextClick }, dir === 'rtl' ? (React.createElement(IconLeft, { className: classNames.nav_icon, style: styles.nav_icon })) : (React.createElement(IconRight, { className: classNames.nav_icon, style: styles.nav_icon }))))));
}

export { Navigation };
//# sourceMappingURL=Navigation.js.map
