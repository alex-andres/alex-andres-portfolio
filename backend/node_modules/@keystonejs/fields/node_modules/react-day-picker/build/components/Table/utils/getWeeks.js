import { startOfMonth, endOfMonth, differenceInCalendarDays, addDays, getWeek, getWeeksInMonth, addWeeks } from 'date-fns';
import { getOutsideEndDays } from './getOutsideEndDays.js';
import { getOutsideStartDays } from './getOutsideStartDays.js';

/**
 * Return the weeks belonging to the given month.
 */
function getWeeks(month, _a) {
    var locale = _a.locale, fixedWeeks = _a.fixedWeeks;
    var monthStart = startOfMonth(month);
    var monthEnd = endOfMonth(month);
    var diff = differenceInCalendarDays(monthEnd, monthStart);
    var weeks = [];
    var lastWeek = { weekNumber: 0, dates: [] };
    for (var i = 0; i <= diff; i++) {
        var date = addDays(monthStart, i);
        var week = getWeek(date, { locale: locale });
        if (lastWeek.weekNumber !== week) {
            // Create a new week by adding outside start days
            var startDays = getOutsideStartDays(date, { locale: locale });
            lastWeek = { weekNumber: week, dates: startDays };
            weeks.push(lastWeek);
        }
        lastWeek.dates.push(date);
    }
    var lastDay = lastWeek.dates[lastWeek.dates.length - 1];
    var endDays = getOutsideEndDays(lastDay, { locale: locale });
    lastWeek.dates = lastWeek.dates.concat(endDays);
    // Add extra weeks to the month, up to 6 weeks
    if (fixedWeeks) {
        var lastWeekDate = lastWeek.dates[lastWeek.dates.length - 1];
        var weeksInMonth = getWeeksInMonth(month, { locale: locale });
        if (weeksInMonth < 6) {
            var diffDays = differenceInCalendarDays(addWeeks(lastWeekDate, 6 - weeksInMonth), lastWeekDate);
            for (var i = 0; i < diffDays; i++) {
                var date = addDays(lastWeekDate, i + 1);
                var week = getWeek(date, { locale: locale });
                if (lastWeek.weekNumber !== week) {
                    lastWeek = { weekNumber: week, dates: [] };
                    weeks.push(lastWeek);
                }
                lastWeek.dates.push(date);
            }
        }
    }
    return weeks;
}

export { getWeeks };
//# sourceMappingURL=getWeeks.js.map
