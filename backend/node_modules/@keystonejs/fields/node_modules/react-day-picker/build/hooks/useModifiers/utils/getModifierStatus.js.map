{"version":3,"file":"getModifierStatus.js","sources":["../../../../src/hooks/useModifiers/utils/getModifierStatus.ts"],"sourcesContent":["import { Modifiers, ModifierStatus } from '../../../types';\nimport { isMatch } from './isMatch';\n\n/**\n * Return the status of the modifiers that matches the given date.\n */\nexport function getModifierStatus(\n  date: Date,\n  /** The modifiers to match for the given date. */\n  modifiers: Modifiers\n): ModifierStatus {\n  const modifiersList = Object.keys(modifiers).reduce(\n    (previousValue: string[], key: string): string[] => {\n      const modifier = modifiers[key];\n      if (isMatch(date, modifier)) {\n        previousValue.push(key);\n      }\n      return previousValue;\n    },\n    []\n  );\n  const modifiersStatus: ModifierStatus = {};\n  modifiersList.forEach((modifier) => (modifiersStatus[modifier] = true));\n  return modifiersStatus;\n}\n"],"names":[],"mappings":";;AAGA;;;SAGgB,iBAAiB,CAC/B,IAAU;AACV;AACA,SAAoB;IAEpB,IAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CACjD,UAAC,aAAuB,EAAE,GAAW;QACnC,IAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE;YAC3B,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB;QACD,OAAO,aAAa,CAAC;KACtB,EACD,EAAE,CACH,CAAC;IACF,IAAM,eAAe,GAAmB,EAAE,CAAC;IAC3C,aAAa,CAAC,OAAO,CAAC,UAAC,QAAQ,IAAK,QAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAC,CAAC,CAAC;IACxE,OAAO,eAAe,CAAC;AACzB;;;;"}