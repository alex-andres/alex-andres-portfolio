{"version":3,"file":"useInput.js","sources":["../../../src/hooks/useInput/useInput.ts"],"sourcesContent":["import React from 'react';\n\nimport { differenceInCalendarDays, format as _format, parse } from 'date-fns';\nimport enUS from 'date-fns/locale/en-US';\n\nimport { parseFromToProps } from '../../contexts/DayPicker/utils';\nimport { DayPickerCustomProps } from '../../types';\nimport { DayPickerProps } from '../../types/DayPicker';\nimport {\n  DayClickEventHandler,\n  MonthChangeEventHandler\n} from '../../types/EventHandlers';\nimport { isValidDate } from './utils/isValidDate';\n\n/** The props to attach to the input field when using [[useInput]]. */\nexport type InputHTMLAttributes = Pick<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  'onBlur' | 'onChange' | 'onFocus' | 'value' | 'placeholder'\n>;\n\n/** The props to attach to the DayPicker component when using [[useInput]]. */\nexport type InputDayPickerProps = Pick<\n  DayPickerCustomProps,\n  | 'mode'\n  | 'fromDate'\n  | 'toDate'\n  | 'locale'\n  | 'month'\n  | 'onDayClick'\n  | 'onMonthChange'\n  | 'selected'\n  | 'today'\n>;\n\nexport interface UseInputOptions\n  extends Pick<\n    DayPickerProps,\n    | 'locale'\n    | 'fromDate'\n    | 'toDate'\n    | 'fromMonth'\n    | 'toMonth'\n    | 'fromYear'\n    | 'toYear'\n    | 'today'\n  > {\n  /** The initially selected date */\n  defaultSelected?: Date;\n  /** The format string for formatting the input field. See https://date-fns.org/docs/format for a list of format strings. Default to `PP`. */\n  format?: string;\n  /** Make the selection required. */\n  required?: boolean;\n}\n\n/** Represent the value returned by [[useInput]]. */\nexport interface UseInput {\n  /** The props to pass to a DayPicker component. */\n  dayPickerProps: InputDayPickerProps;\n  /** The props to pass to an input field. */\n  inputProps: InputHTMLAttributes;\n  /** A function to reset to the initial state. */\n  reset: () => void;\n  /** A function to set the selected day. */\n  setSelected: (day: Date) => void;\n}\n\n/** Return props and setters for binding an input field to DayPicker. */\nexport function useInput(options: UseInputOptions = {}): UseInput {\n  const {\n    locale = enUS,\n    required,\n    format = 'PP',\n    defaultSelected,\n    today = new Date()\n  } = options;\n  const { fromDate, toDate } = parseFromToProps(options);\n\n  // Shortcut to the DateFns functions\n  const parseValue = (value: string) => parse(value, format, today, { locale });\n\n  // Initialize states\n  const [month, setMonth] = React.useState(defaultSelected ?? today);\n  const [selectedDay, setSelectedDay] = React.useState(defaultSelected);\n  const defaultInputValue = defaultSelected\n    ? _format(defaultSelected, format, { locale })\n    : '';\n  const [inputValue, setInputValue] = React.useState(defaultInputValue);\n\n  const reset = () => {\n    setSelectedDay(defaultSelected);\n    setMonth(defaultSelected ?? today);\n    setInputValue(defaultInputValue ?? '');\n  };\n\n  const setSelected = (date: Date | undefined) => {\n    setSelectedDay(date);\n    setMonth(date ?? today);\n    setInputValue(date ? _format(date, format, { locale }) : '');\n  };\n\n  const handleDayClick: DayClickEventHandler = (day, { selected }) => {\n    if (!required && selected) {\n      setSelectedDay(undefined);\n      setInputValue('');\n      return;\n    }\n    setSelectedDay(day);\n    setInputValue(day ? _format(day, format, { locale }) : '');\n  };\n\n  const handleMonthChange: MonthChangeEventHandler = (month) => {\n    setMonth(month);\n  };\n\n  // When changing the input field, save its value in state and check if the\n  // string is a valid date. If it is a valid day, set it as selected and update\n  // the calendarâ€™s month.\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setInputValue(e.target.value);\n    const day = parseValue(e.target.value);\n    const isBefore = fromDate && differenceInCalendarDays(fromDate, day) > 0;\n    const isAfter = toDate && differenceInCalendarDays(day, toDate) > 0;\n    if (!isValidDate(day) || isBefore || isAfter) {\n      setSelectedDay(undefined);\n      return;\n    }\n    setSelectedDay(day);\n    setMonth(day);\n  };\n\n  // Special case for _required_ fields: on blur, if the value of the input is not\n  // a valid date, reset the calendar and the input value.\n  const handleBlur: React.FocusEventHandler<HTMLInputElement> = (e) => {\n    const day = parseValue(e.target.value);\n    if (!isValidDate(day)) {\n      reset();\n    }\n  };\n\n  // When focusing, make sure DayPicker visualizes the month of the date in the\n  // input field.\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = (e) => {\n    if (!e.target.value) {\n      reset();\n      return;\n    }\n    const day = parseValue(e.target.value);\n    if (isValidDate(day)) {\n      setMonth(day);\n    }\n  };\n\n  const dayPickerProps: InputDayPickerProps = {\n    mode: 'custom',\n    month: month,\n    onDayClick: handleDayClick,\n    onMonthChange: handleMonthChange,\n    selected: selectedDay,\n    locale,\n    fromDate: options?.fromDate,\n    toDate: options?.toDate,\n    today\n  };\n\n  const inputProps: InputHTMLAttributes = {\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    value: inputValue,\n    placeholder: _format(new Date(), format, { locale })\n  };\n\n  return { dayPickerProps, inputProps, reset, setSelected };\n}\n"],"names":["format","_format"],"mappings":"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"}