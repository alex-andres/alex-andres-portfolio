/** Returns true if `matcher` is of type [[DateInterval]]. */
function isDateInterval(matcher) {
    return Boolean(matcher &&
        typeof matcher === 'object' &&
        'before' in matcher &&
        'after' in matcher);
}
/** Returns true if `value` is a [[DateRange]] type. */
function isDateRange(value) {
    // TODO: Check if dates?!
    return Boolean(value && typeof value === 'object' && 'from' in value);
}
/** Returns true if `value` is of type [[DateAfter]]. */
function isDateAfterType(value) {
    return Boolean(value && typeof value === 'object' && 'after' in value);
}
/** Returns true if `value` is of type [[DateBefore]]. */
function isDateBeforeType(value) {
    return Boolean(value && typeof value === 'object' && 'before' in value);
}
/** Returns true if `value` is a [[DayOfWeek]] type. */
function isDayOfWeekType(value) {
    return Boolean(value && typeof value === 'object' && 'dayOfWeek' in value);
}

export { isDateAfterType, isDateBeforeType, isDateInterval, isDateRange, isDayOfWeekType };
//# sourceMappingURL=Matchers.js.map
