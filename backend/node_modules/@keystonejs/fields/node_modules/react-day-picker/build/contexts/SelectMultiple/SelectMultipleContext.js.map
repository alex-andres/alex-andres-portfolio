{"version":3,"file":"SelectMultipleContext.js","sources":["../../../src/contexts/SelectMultiple/SelectMultipleContext.tsx"],"sourcesContent":["import React from 'react';\n\nimport { isSameDay } from 'date-fns';\n\nimport {\n  DayClickEventHandler,\n  DayPickerMultipleProps,\n  DayPickerProps,\n  isDayPickerMultiple,\n  Modifiers\n} from '../../types';\n\n/** Represent the modifiers that are changed by the multiple selection. */\nexport type SelectMultipleModifiers = Pick<Modifiers, 'selected' | 'disabled'>;\n\n/** Represents the value of a [[SelectMultipleContext]]. */\nexport interface SelectMultipleContextValue {\n  /** The days that have been selected. */\n  selected: Date[] | undefined;\n  /** The modifiers for the corresponding selection. */\n  modifiers: SelectMultipleModifiers;\n  /** Event handler to attach to the day button to enable the multiple select. */\n  onDayClick?: DayClickEventHandler;\n}\n\n/**\n * The SelectMultiple context shares details about the selected days when in\n * multiple selection mode.\n *\n * Access this context from the [[useSelectMultiple]] hook.\n */\nexport const SelectMultipleContext = React.createContext<\n  SelectMultipleContextValue | undefined\n>(undefined);\n\nexport type SelectMultipleProviderProps = {\n  initialProps: DayPickerProps;\n  children: React.ReactNode;\n};\n\n/** Provides the values for the [[SelectMultipleContext]]. */\nexport function SelectMultipleProvider(\n  props: SelectMultipleProviderProps\n): JSX.Element {\n  if (!isDayPickerMultiple(props.initialProps)) {\n    const emptyContextValue: SelectMultipleContextValue = {\n      selected: undefined,\n      modifiers: {\n        selected: [],\n        disabled: []\n      }\n    };\n    return (\n      <SelectMultipleContext.Provider value={emptyContextValue}>\n        {props.children}\n      </SelectMultipleContext.Provider>\n    );\n  }\n  return (\n    <SelectMultipleProviderInternal\n      initialProps={props.initialProps}\n      children={props.children}\n    />\n  );\n}\n\ntype SelectMultipleProviderInternalProps = {\n  initialProps: DayPickerMultipleProps;\n  children: React.ReactNode;\n};\n\nexport function SelectMultipleProviderInternal({\n  initialProps,\n  children\n}: SelectMultipleProviderInternalProps): JSX.Element {\n  const { selected } = initialProps;\n  const onDayClick: DayClickEventHandler = (day, modifiers, e) => {\n    initialProps.onDayClick?.(day, modifiers, e);\n\n    const isMinSelected = Boolean(\n      initialProps.min &&\n        modifiers.selected &&\n        selected &&\n        selected.length === initialProps.min\n    );\n    if (isMinSelected) {\n      return;\n    }\n    const isMaxSelected = Boolean(\n      initialProps.max &&\n        !modifiers.selected &&\n        selected &&\n        selected.length === initialProps.max\n    );\n    if (isMaxSelected) {\n      return;\n    }\n\n    const days = selected ? [...selected] : [];\n    if (modifiers.selected) {\n      const index = days.findIndex((selectedDay) =>\n        isSameDay(day, selectedDay)\n      );\n      days.splice(index, 1);\n    } else {\n      days.push(day);\n    }\n    initialProps.onSelect?.(days, day, modifiers, e);\n  };\n\n  const modifiers: SelectMultipleModifiers = {\n    selected: [],\n    disabled: []\n  };\n\n  if (selected) {\n    modifiers.selected = selected;\n    modifiers.disabled = [\n      function disableDay(day: Date) {\n        const isMaxSelected =\n          initialProps.max &&\n          selected &&\n          selected.length > initialProps.max - 1;\n        const isSelected = selected?.some((selectedDay) =>\n          isSameDay(selectedDay, day)\n        );\n        return Boolean(isMaxSelected && !isSelected);\n      }\n    ];\n  }\n\n  const contextValue = { selected, onDayClick, modifiers };\n\n  return (\n    <SelectMultipleContext.Provider value={contextValue}>\n      {children}\n    </SelectMultipleContext.Provider>\n  );\n}\n"],"names":[],"mappings":"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"}