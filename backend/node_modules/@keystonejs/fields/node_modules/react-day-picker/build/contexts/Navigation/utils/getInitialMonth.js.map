{"version":3,"file":"getInitialMonth.js","sources":["../../../../src/contexts/Navigation/utils/getInitialMonth.ts"],"sourcesContent":["import { addMonths, differenceInCalendarMonths, startOfMonth } from 'date-fns';\nimport { DayPickerContextValue } from '../../DayPicker/DayPickerContext';\n\n/** Return the initial month according to the given options. */\nexport function getInitialMonth(context: Partial<DayPickerContextValue>): Date {\n  const { month, defaultMonth, today } = context;\n  let initialMonth = month || defaultMonth || today || new Date();\n\n  const { toDate, fromDate, numberOfMonths = 1 } = context;\n\n  // Fix the initialMonth if is after the to-date\n  if (toDate && differenceInCalendarMonths(toDate, initialMonth) < 0) {\n    const offset = -1 * (numberOfMonths - 1);\n    initialMonth = addMonths(toDate, offset);\n  }\n  // Fix the initialMonth if is before the from-date\n  if (fromDate && differenceInCalendarMonths(initialMonth, fromDate) < 0) {\n    initialMonth = fromDate;\n  }\n  return startOfMonth(initialMonth);\n}\n"],"names":[],"mappings":";;AAGA;SACgB,eAAe,CAAC,OAAuC;IAC7D,IAAA,KAAK,GAA0B,OAAO,MAAjC,EAAE,YAAY,GAAY,OAAO,aAAnB,EAAE,KAAK,GAAK,OAAO,MAAZ,CAAa;IAC/C,IAAI,YAAY,GAAG,KAAK,IAAI,YAAY,IAAI,KAAK,IAAI,IAAI,IAAI,EAAE,CAAC;IAExD,IAAA,MAAM,GAAmC,OAAO,OAA1C,EAAE,QAAQ,GAAyB,OAAO,SAAhC,EAAE,KAAuB,OAAO,eAAZ,EAAlB,cAAc,mBAAG,CAAC,KAAA,CAAa;;IAGzD,IAAI,MAAM,IAAI,0BAA0B,CAAC,MAAM,EAAE,YAAY,CAAC,GAAG,CAAC,EAAE;QAClE,IAAM,MAAM,GAAG,CAAC,CAAC,IAAI,cAAc,GAAG,CAAC,CAAC,CAAC;QACzC,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KAC1C;;IAED,IAAI,QAAQ,IAAI,0BAA0B,CAAC,YAAY,EAAE,QAAQ,CAAC,GAAG,CAAC,EAAE;QACtE,YAAY,GAAG,QAAQ,CAAC;KACzB;IACD,OAAO,YAAY,CAAC,YAAY,CAAC,CAAC;AACpC;;;;"}